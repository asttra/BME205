%!PS-Adobe-2.0 EPSF-2.0
%%Title: graph.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Wed Nov  6 23:14:27 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 75.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (graph.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (lebailly)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Nov  6 23:14:27 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
/Helvetica findfont 200 scalefont setfont
/vshift -66 def
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1340 640 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-14) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 911 M
31 0 V
5468 0 R
-31 0 V
1340 1183 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-12) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 1454 M
31 0 V
5468 0 R
-31 0 V
1340 1725 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-10) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 1997 M
31 0 V
5468 0 R
-31 0 V
1340 2268 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-08) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 2540 M
31 0 V
5468 0 R
-31 0 V
1340 2811 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-06) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 3082 M
31 0 V
5468 0 R
-31 0 V
1340 3354 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 0.0001) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 3625 M
31 0 V
5468 0 R
-31 0 V
1340 3896 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 0.01) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 4168 M
31 0 V
5468 0 R
-31 0 V
1340 4439 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 10) Cshow
1.000 UL
LTb
LCb setrgbcolor
2373 640 M
0 31 V
0 3768 R
0 -31 V
2978 640 M
0 31 V
0 3768 R
0 -31 V
3407 640 M
0 31 V
0 3768 R
0 -31 V
3739 640 M
0 31 V
0 3768 R
0 -31 V
4011 640 M
0 31 V
0 3768 R
0 -31 V
4241 640 M
0 31 V
0 3768 R
0 -31 V
4440 640 M
0 31 V
0 3768 R
0 -31 V
4615 640 M
0 31 V
0 3768 R
0 -31 V
4772 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 100) Cshow
1.000 UL
LTb
LCb setrgbcolor
5806 640 M
0 31 V
0 3768 R
0 -31 V
6410 640 M
0 31 V
0 3768 R
0 -31 V
6839 640 M
0 31 V
0 3768 R
0 -31 V
stroke
LTb
LCb setrgbcolor
1340 4439 N
0 -3799 V
5499 0 V
0 3799 V
-5499 0 V
Z stroke
LCb setrgbcolor
160 2539 M
currentpoint gsave translate -270 rotate 0 0 M
(probability) Cshow
grestore
LTb
LCb setrgbcolor
4089 140 M
(ORF length \(codons\)) Cshow
LTb
4089 4739 M
(random codon model) Cshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UL
LT0
LC0 setrgbcolor
/Helvetica findfont 200 scalefont setfont
LCb setrgbcolor
5936 4276 M
(lognormal\(x,mu,sigma\)) Rshow
LT0
6056 4276 M
543 0 V
1340 940 M
56 86 V
55 84 V
56 84 V
55 81 V
56 81 V
55 79 V
56 78 V
55 77 V
56 76 V
55 74 V
56 73 V
56 72 V
55 70 V
56 69 V
55 68 V
56 67 V
55 65 V
56 64 V
55 63 V
56 61 V
55 61 V
56 59 V
56 57 V
55 57 V
56 55 V
55 54 V
56 53 V
55 51 V
56 50 V
55 49 V
56 48 V
55 46 V
56 45 V
56 44 V
55 42 V
56 42 V
55 39 V
56 39 V
55 38 V
56 36 V
55 35 V
56 33 V
55 33 V
56 31 V
56 30 V
55 28 V
56 27 V
55 26 V
56 25 V
55 24 V
56 22 V
55 21 V
56 19 V
55 19 V
56 17 V
56 16 V
55 14 V
56 14 V
55 12 V
56 10 V
55 10 V
56 8 V
55 7 V
56 6 V
55 4 V
56 3 V
56 2 V
55 1 V
56 -1 V
55 -2 V
56 -3 V
55 -4 V
56 -6 V
55 -7 V
56 -8 V
55 -10 V
56 -11 V
56 -12 V
55 -13 V
56 -15 V
55 -16 V
56 -17 V
55 -18 V
56 -20 V
55 -21 V
56 -22 V
55 -23 V
56 -25 V
56 -26 V
55 -28 V
56 -28 V
55 -30 V
56 -31 V
55 -32 V
56 -34 V
55 -35 V
56 -36 V
55 -38 V
56 -38 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
LC1 setrgbcolor
/Helvetica findfont 200 scalefont setfont
LCb setrgbcolor
5936 4076 M
('hist1.txt' using 1:3) Rshow
LT1
2515 3354 Crs
2582 3354 Crs
2821 3517 Crs
2927 3354 Crs
2978 3354 Crs
3027 3483 Crs
3074 3483 Crs
3120 3543 Crs
3164 3435 Crs
3207 3646 Crs
3249 3483 Crs
3290 3354 Crs
3330 3565 Crs
3369 3354 Crs
3407 3656 Crs
3443 3599 Crs
3479 3435 Crs
3514 3599 Crs
3549 3707 Crs
3582 3543 Crs
3615 3435 Crs
3647 3599 Crs
3678 3599 Crs
3739 3625 Crs
3769 3673 Crs
3798 3636 Crs
3826 3636 Crs
3854 3853 Crs
3881 3815 Crs
3908 3673 Crs
3935 3673 Crs
3960 3800 Crs
4011 3782 Crs
4036 3646 Crs
4060 3851 Crs
4084 3680 Crs
4107 3785 Crs
4130 3766 Crs
4153 3985 Crs
4175 3899 Crs
4198 3794 Crs
4219 3776 Crs
4241 3354 Crs
4262 3836 Crs
4283 3819 Crs
4303 3865 Crs
4363 3656 Crs
4383 3824 Crs
4421 3910 Crs
4440 3517 Crs
4477 3483 Crs
4495 3483 Crs
4513 3435 Crs
4530 3938 Crs
4548 3836 Crs
4565 3846 Crs
4582 3891 Crs
4615 3938 Crs
4632 3543 Crs
4648 3942 Crs
4664 3718 Crs
4696 3483 Crs
4712 3895 Crs
4727 3707 Crs
4742 4037 Crs
4757 3800 Crs
4772 3483 Crs
4787 3733 Crs
4802 3836 Crs
4817 3969 Crs
4831 3779 Crs
4845 3694 Crs
4859 3987 Crs
4873 3354 Crs
4887 3815 Crs
4901 3543 Crs
4915 3613 Crs
4928 3807 Crs
4941 3788 Crs
4955 4025 Crs
4968 3435 Crs
4994 3583 Crs
5007 4001 Crs
5019 3746 Crs
5032 3927 Crs
5057 3543 Crs
5105 3856 Crs
5117 3869 Crs
5129 3750 Crs
5152 3517 Crs
5198 3435 Crs
5209 3894 Crs
5220 4014 Crs
5253 3435 Crs
5263 3819 Crs
5274 3354 Crs
5295 3934 Crs
5306 3599 Crs
5337 3928 Crs
5347 3928 Crs
5357 4047 Crs
5367 3928 Crs
5377 3707 Crs
5397 3981 Crs
5406 3933 Crs
5416 3694 Crs
5426 4011 Crs
5445 3908 Crs
5464 3927 Crs
5482 3871 Crs
5492 3961 Crs
5501 3733 Crs
5510 3656 Crs
5519 3929 Crs
5528 3840 Crs
5537 3889 Crs
5546 3847 Crs
5555 4004 Crs
5563 3800 Crs
5581 3750 Crs
5590 3742 Crs
5598 3728 Crs
5615 3921 Crs
5624 3844 Crs
5632 3483 Crs
5640 3928 Crs
5649 3791 Crs
5657 3517 Crs
5673 3723 Crs
5681 3599 Crs
5690 3354 Crs
5698 3712 Crs
5706 3927 Crs
5713 3812 Crs
5737 3646 Crs
5745 3995 Crs
5753 3834 Crs
5776 3924 Crs
5783 3802 Crs
5791 3517 Crs
5798 3483 Crs
5806 3993 Crs
5813 3900 Crs
5828 3728 Crs
5835 3919 Crs
5843 3583 Crs
5857 3746 Crs
5871 3794 Crs
5886 3435 Crs
5893 3773 Crs
5900 3884 Crs
5920 3646 Crs
5941 3483 Crs
5948 3807 Crs
5955 3854 Crs
5961 3733 Crs
5975 3583 Crs
5981 3354 Crs
5988 3599 Crs
5994 3565 Crs
6001 3791 Crs
6014 3583 Crs
6027 3728 Crs
6033 3517 Crs
6052 3665 Crs
6071 3483 Crs
6078 3354 Crs
6084 3565 Crs
6096 3712 Crs
6132 3583 Crs
6138 3646 Crs
6162 3766 Crs
6168 3435 Crs
6174 3707 Crs
6185 3673 Crs
6208 3613 Crs
6225 3354 Crs
6231 3625 Crs
6236 3810 Crs
6242 3728 Crs
6248 3354 Crs
6253 3646 Crs
6259 3718 Crs
6270 3435 Crs
6275 3517 Crs
6291 3656 Crs
6302 3517 Crs
6313 3543 Crs
6318 3543 Crs
6323 3583 Crs
6344 3565 Crs
6349 3723 Crs
6354 3625 Crs
6360 3543 Crs
6380 3435 Crs
6385 3625 Crs
6390 3599 Crs
6400 3354 Crs
6410 3435 Crs
6415 3766 Crs
6420 3636 Crs
6425 3435 Crs
6430 3599 Crs
6435 3728 Crs
6473 3599 Crs
6492 3656 Crs
6516 3636 Crs
6525 3354 Crs
6529 3354 Crs
6534 3583 Crs
6539 3613 Crs
6543 3435 Crs
6548 3583 Crs
6552 3483 Crs
6557 3483 Crs
6579 3599 Crs
6588 3483 Crs
6597 3543 Crs
6601 3483 Crs
6614 3354 Crs
6636 3599 Crs
6644 3543 Crs
6661 3354 Crs
6674 3599 Crs
6690 3680 Crs
6694 3543 Crs
6707 3599 Crs
6727 3583 Crs
6731 3483 Crs
6743 3680 Crs
6747 3435 Crs
6751 3354 Crs
6759 3483 Crs
6774 3565 Crs
6778 3435 Crs
6786 3483 Crs
6790 3517 Crs
6801 3517 Crs
6809 3565 Crs
6828 3354 Crs
6835 3435 Crs
6327 4076 Crs
% End plot #2
1.000 UL
LTb
LCb setrgbcolor
1340 4439 N
0 -3799 V
5499 0 V
0 3799 V
-5499 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%!PS-Adobe-2.0 EPSF-2.0
%%Title: graph.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Wed Nov  6 23:16:06 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 75.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (graph.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (lebailly)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Nov  6 23:16:06 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
/Helvetica findfont 200 scalefont setfont
/vshift -66 def
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1340 640 M
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-07) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 831 M
31 0 V
5468 0 R
-31 0 V
1340 1083 M
31 0 V
5468 0 R
-31 0 V
1340 1212 M
31 0 V
5468 0 R
-31 0 V
-5468 61 R
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-06) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 1464 M
31 0 V
5468 0 R
-31 0 V
1340 1716 M
31 0 V
5468 0 R
-31 0 V
1340 1845 M
31 0 V
5468 0 R
-31 0 V
-5468 61 R
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 1e-05) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 2097 M
31 0 V
5468 0 R
-31 0 V
1340 2349 M
31 0 V
5468 0 R
-31 0 V
1340 2478 M
31 0 V
5468 0 R
-31 0 V
-5468 62 R
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 0.0001) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 2730 M
31 0 V
5468 0 R
-31 0 V
1340 2982 M
31 0 V
5468 0 R
-31 0 V
1340 3111 M
31 0 V
5468 0 R
-31 0 V
-5468 62 R
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 0.001) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 3363 M
31 0 V
5468 0 R
-31 0 V
1340 3615 M
31 0 V
5468 0 R
-31 0 V
1340 3744 M
31 0 V
5468 0 R
-31 0 V
-5468 62 R
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 0.01) Rshow
1.000 UL
LTb
LCb setrgbcolor
1340 3996 M
31 0 V
5468 0 R
-31 0 V
1340 4248 M
31 0 V
5468 0 R
-31 0 V
1340 4378 M
31 0 V
5468 0 R
-31 0 V
-5468 61 R
63 0 V
5436 0 R
-63 0 V
-5556 0 R
( 0.1) Rshow
1.000 UL
LTb
LCb setrgbcolor
1904 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 50) Cshow
1.000 UL
LTb
LCb setrgbcolor
2609 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 100) Cshow
1.000 UL
LTb
LCb setrgbcolor
3314 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 150) Cshow
1.000 UL
LTb
LCb setrgbcolor
4019 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 200) Cshow
1.000 UL
LTb
LCb setrgbcolor
4724 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 250) Cshow
1.000 UL
LTb
LCb setrgbcolor
5429 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 300) Cshow
1.000 UL
LTb
LCb setrgbcolor
6134 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 350) Cshow
1.000 UL
LTb
LCb setrgbcolor
6839 640 M
0 63 V
0 3736 R
0 -63 V
0 -3936 R
( 400) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1340 4439 N
0 -3799 V
5499 0 V
0 3799 V
-5499 0 V
Z stroke
LCb setrgbcolor
160 2539 M
currentpoint gsave translate -270 rotate 0 0 M
(probability) Cshow
grestore
LTb
LCb setrgbcolor
4089 140 M
(ORF length \(codons\)) Cshow
LTb
4089 4739 M
(random codon model) Cshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UL
LT0
LC0 setrgbcolor
/Helvetica findfont 200 scalefont setfont
LCb setrgbcolor
5936 4276 M
(gumbel\(x,m,beta\)) Rshow
LT0
6056 4276 M
543 0 V
1340 1201 M
56 272 V
55 247 V
56 224 V
55 204 V
56 184 V
55 167 V
56 151 V
55 136 V
56 123 V
55 110 V
56 99 V
56 89 V
55 79 V
56 71 V
55 62 V
56 56 V
55 48 V
56 43 V
55 37 V
56 32 V
55 27 V
56 23 V
56 19 V
55 15 V
56 12 V
55 9 V
56 6 V
55 4 V
56 1 V
55 -1 V
56 -3 V
55 -4 V
56 -7 V
56 -7 V
55 -9 V
56 -11 V
55 -11 V
56 -13 V
55 -13 V
56 -15 V
55 -15 V
56 -16 V
55 -17 V
56 -17 V
56 -18 V
55 -18 V
56 -19 V
55 -19 V
56 -20 V
55 -20 V
56 -21 V
55 -20 V
56 -21 V
55 -22 V
56 -21 V
56 -22 V
55 -22 V
56 -22 V
55 -22 V
56 -23 V
55 -22 V
56 -23 V
55 -23 V
56 -23 V
55 -23 V
56 -23 V
56 -23 V
55 -23 V
56 -24 V
55 -23 V
56 -24 V
55 -23 V
56 -24 V
55 -23 V
56 -24 V
55 -24 V
56 -23 V
56 -24 V
55 -24 V
56 -24 V
55 -24 V
56 -23 V
55 -24 V
56 -24 V
55 -24 V
56 -24 V
55 -24 V
56 -24 V
56 -24 V
55 -24 V
56 -24 V
55 -24 V
56 -24 V
55 -24 V
56 -24 V
55 -24 V
56 -24 V
55 -24 V
56 -24 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
LC1 setrgbcolor
/Helvetica findfont 200 scalefont setfont
LCb setrgbcolor
5936 4076 M
('hist1.txt' using 1:3) Rshow
LT1
1509 2540 Crs
1523 2540 Crs
1580 2921 Crs
1608 2540 Crs
1622 2540 Crs
1636 2842 Crs
1650 2842 Crs
1664 2982 Crs
1678 2730 Crs
1693 3223 Crs
1707 2842 Crs
1721 2540 Crs
1735 3032 Crs
1749 2540 Crs
1763 3245 Crs
1777 3111 Crs
1791 2730 Crs
1805 3111 Crs
1819 3363 Crs
1834 2982 Crs
1848 2730 Crs
1862 3111 Crs
1876 3111 Crs
1904 3173 Crs
1918 3284 Crs
1932 3199 Crs
1946 3199 Crs
1960 3704 Crs
1975 3615 Crs
1989 3284 Crs
2003 3284 Crs
2017 3580 Crs
2045 3540 Crs
2059 3223 Crs
2073 3700 Crs
2087 3302 Crs
2101 3547 Crs
2116 3501 Crs
2130 4012 Crs
2144 3811 Crs
2158 3567 Crs
2172 3525 Crs
2186 2540 Crs
2200 3665 Crs
2214 3626 Crs
2228 3734 Crs
2271 3245 Crs
2285 3636 Crs
2313 3837 Crs
2327 2921 Crs
2355 2842 Crs
2369 2842 Crs
2383 2730 Crs
2398 3902 Crs
2412 3665 Crs
2426 3687 Crs
2440 3795 Crs
2468 3902 Crs
2482 2982 Crs
2496 3912 Crs
2510 3389 Crs
2539 2842 Crs
2553 3803 Crs
2567 3363 Crs
2581 4134 Crs
2595 3580 Crs
2609 2842 Crs
2623 3425 Crs
2637 3665 Crs
2651 3976 Crs
2665 3532 Crs
2680 3334 Crs
2694 4018 Crs
2708 2540 Crs
2722 3615 Crs
2736 2982 Crs
2750 3144 Crs
2764 3598 Crs
2778 3554 Crs
2792 4107 Crs
2806 2730 Crs
2835 3075 Crs
2849 4051 Crs
2863 3456 Crs
2877 3878 Crs
2905 2982 Crs
2962 3712 Crs
2976 3741 Crs
2990 3465 Crs
3018 2921 Crs
3074 2730 Crs
3088 3800 Crs
3103 4080 Crs
3145 2730 Crs
3159 3626 Crs
3173 2540 Crs
3201 3894 Crs
3215 3111 Crs
3258 3880 Crs
3272 3880 Crs
3286 4158 Crs
3300 3880 Crs
3314 3363 Crs
3342 4003 Crs
3356 3892 Crs
3370 3334 Crs
3385 4074 Crs
3413 3832 Crs
3441 3878 Crs
3469 3748 Crs
3483 3957 Crs
3497 3425 Crs
3511 3245 Crs
3526 3882 Crs
3540 3674 Crs
3554 3789 Crs
3568 3692 Crs
3582 4057 Crs
3596 3580 Crs
3624 3465 Crs
3638 3446 Crs
3652 3413 Crs
3681 3863 Crs
3695 3683 Crs
3709 2842 Crs
3723 3880 Crs
3737 3561 Crs
3751 2921 Crs
3779 3402 Crs
3793 3111 Crs
3808 2540 Crs
3822 3377 Crs
3836 3878 Crs
3850 3610 Crs
3892 3223 Crs
3906 4037 Crs
3920 3661 Crs
3963 3869 Crs
3977 3586 Crs
3991 2921 Crs
4005 2842 Crs
4019 4031 Crs
4033 3814 Crs
4061 3413 Crs
4075 3858 Crs
4090 3075 Crs
4118 3456 Crs
4146 3567 Crs
4174 2730 Crs
4188 3517 Crs
4202 3777 Crs
4245 3223 Crs
4287 2842 Crs
4301 3598 Crs
4315 3708 Crs
4329 3425 Crs
4357 3075 Crs
4372 2540 Crs
4386 3111 Crs
4400 3032 Crs
4414 3561 Crs
4442 3075 Crs
4470 3413 Crs
4484 2921 Crs
4527 3265 Crs
4569 2842 Crs
4583 2540 Crs
4597 3032 Crs
4625 3377 Crs
4710 3075 Crs
4724 3223 Crs
4780 3501 Crs
4795 2730 Crs
4809 3363 Crs
4837 3284 Crs
4893 3144 Crs
4936 2540 Crs
4950 3173 Crs
4964 3604 Crs
4978 3413 Crs
4992 2540 Crs
5006 3223 Crs
5020 3389 Crs
5048 2730 Crs
5062 2921 Crs
5105 3245 Crs
5133 2921 Crs
5161 2982 Crs
5175 2982 Crs
5189 3075 Crs
5246 3032 Crs
5260 3402 Crs
5274 3173 Crs
5288 2982 Crs
5344 2730 Crs
5359 3173 Crs
5373 3111 Crs
5401 2540 Crs
5429 2730 Crs
5443 3501 Crs
5457 3199 Crs
5471 2730 Crs
5485 3111 Crs
5500 3413 Crs
5612 3111 Crs
5669 3245 Crs
5739 3199 Crs
5767 2540 Crs
5782 2540 Crs
5796 3075 Crs
5810 3144 Crs
5824 2730 Crs
5838 3075 Crs
5852 2842 Crs
5866 2842 Crs
5937 3111 Crs
5965 2842 Crs
5993 2982 Crs
6007 2842 Crs
6049 2540 Crs
6120 3111 Crs
6148 2982 Crs
6205 2540 Crs
6247 3111 Crs
6303 3302 Crs
6317 2982 Crs
6360 3111 Crs
6430 3075 Crs
6444 2842 Crs
6487 3302 Crs
6501 2730 Crs
6515 2540 Crs
6543 2842 Crs
6599 3032 Crs
6613 2730 Crs
6642 2842 Crs
6656 2921 Crs
6698 2921 Crs
6726 3032 Crs
6797 2540 Crs
6825 2730 Crs
6327 4076 Crs
% End plot #2
1.000 UL
LTb
LCb setrgbcolor
1340 4439 N
0 -3799 V
5499 0 V
0 3799 V
-5499 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       %%Trailer
%%DocumentFonts: Helvetica
